services:
  db:
    image: postgres:16
    container_name: sgr_db
    environment:
      POSTGRES_DB: app_db
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: app_password
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app_user -d app_db"]
      interval: 5s
      timeout: 3s
      retries: 10

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sgr_api
    env_file:
      - ./backend/.env.example
    environment:
      - DATABASE_URL=postgresql://app_user:app_password@db:5432/app_db?schema=public
      - CORS_ORIGIN=http://localhost:5173
      - NODE_ENV=development
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3000:3000"
    command: ["sh", "-c", "npm run prisma:deploy && node dist/main.js"]
    healthcheck:
      test: ["CMD-SHELL", "node -e \"fetch('http://localhost:3000/api/v1/health').then(r=>process.exit(r.ok?0:1)).catch(()=>process.exit(1))\""]
      interval: 10s
      timeout: 3s
      retries: 10

  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_BASE_URL: http://localhost:3000/api/v1
    container_name: sgr_web
    depends_on:
      api:
        condition: service_healthy
    ports:
      - "5173:80"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost/ >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10

volumes:
  db_data:
